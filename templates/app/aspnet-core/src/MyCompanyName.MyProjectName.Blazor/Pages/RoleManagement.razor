@page "/role-management"
@attribute [Authorize]
@using Volo.Abp.Identity
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Volo.Abp.Application.Dtos
@using Volo.Abp.Identity.Localization
@inject IIdentityRoleAppService RoleAppService
@inject IStringLocalizer<IdentityResource> L
@inject IUiMessageService UiMessageService
@* ************************* PAGE HEADER ************************* *@
<Row>
    <Column ColumnSize="ColumnSize.Is6">
        <h1>@L["Roles"]</h1>
    </Column>
    <Column ColumnSize="ColumnSize.Is6">
        <Paragraph Alignment="TextAlignment.Right">
            <Button Color="Color.Primary" Clicked="OpenCreateModal">+ New Role</Button>
        </Paragraph>
    </Column>
</Row>

@* ************************* DATA GRID ************************* *@
<DataGrid TItem="IdentityRoleDto"
          Data="_roles"
          ReadData="OnDataGridReadAsync"
          TotalItems="_totalCount"
          ShowPager="true"
          PageSize="@LimitedResultRequestDto.DefaultMaxResultCount">
    <DataGridColumns>
        <DataGridColumn Width="150px" TItem="IdentityRoleDto" Field="@nameof(IdentityRoleDto.Name)" Sortable="false" Caption="Actions">
            <DisplayTemplate>
                <Dropdown>
                    <DropdownToggle Color="Color.Primary">
                        Actions
                    </DropdownToggle>
                    <DropdownMenu>
                        <DropdownItem Clicked="() => OpenEditModalAsync(context.As<IdentityRoleDto>().Id)">Edit</DropdownItem>
                        <DropdownItem>Manage Permissions</DropdownItem>
                        <DropdownDivider />
                        <DropdownItem Clicked="() => DeleteRoleAsync(context.As<IdentityRoleDto>())">Delete</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="IdentityRoleDto" Field="@nameof(IdentityRoleDto.Name)" Caption="Name">
            <DisplayTemplate>
                @(context.As<IdentityRoleDto>().Name)
                @if (context.As<IdentityRoleDto>().IsDefault)
                {
                    <Badge Color="Color.Primary">default</Badge>
                }
                @if (context.As<IdentityRoleDto>().IsPublic)
                {
                    <Badge Color="Color.Light">public</Badge>
                }
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="_createModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Create a new role</ModalTitle>
            <CloseButton Clicked="CloseCreateModal" />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Name</FieldLabel>
                <TextEdit @bind-text="_newRole.Name" />
            </Field>
            <Field>
                <Check TValue="bool" @bind-checked="_newRole.IsDefault">Default</Check>
                <Check TValue="bool" @bind-checked="_newRole.IsPublic">Public</Check>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="CloseCreateModal">Cancel</Button>
            <Button Color="Color.Primary" Clicked="CreateRoleAsync">Save</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="_editModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Edit role</ModalTitle>
            <CloseButton Clicked="CloseEditModal" />
        </ModalHeader>
        <ModalBody>
            <input type="hidden" name="ConcurrencyStamp" @bind-value="_editingRole.ConcurrencyStamp" />
            <Field>
                <FieldLabel>Name</FieldLabel>
                <TextEdit @bind-text="_editingRole.Name" />
            </Field>
            <Field>
                <Check TValue="bool" @bind-checked="_editingRole.IsDefault">Default</Check>
                <Check TValue="bool" @bind-checked="_editingRole.IsPublic">Public</Check>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="CloseEditModal">Cancel</Button>
            <Button Color="Color.Primary" Clicked="UpdateRoleAsync">Save</Button>
        </ModalFooter>
    </ModalContent>
</Modal>